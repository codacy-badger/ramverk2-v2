{"version":3,"sources":["FakeAPI.js"],"names":["FakeAPI","constructor","options","getRoutes","postRoutes","getGet","route","trimRoute","split","join","isValid","find","validRoute","status","title","data","reports","kmom","getPost","reportInfo","loginInfo","module","exports"],"mappings":"AAAA;;;AAGA;;AAEA,MAAMA,OAAN,CAAc;AACV;;;;;AAKAC,EAAAA,WAAW,CAACC,OAAO,GAAG,EAAX,EAAe;AACtB,SAAKC,SAAL,GAAkBD,OAAO,CAACC,SAAR,IAAsB,CAAC,EAAD,EAAK,SAAL,EAAgB,OAAhB,CAAxC;AACA,SAAKC,UAAL,GAAkBF,OAAO,CAACE,UAAR,IAAsB,CAAC,QAAD,EAAW,OAAX,CAAxC;AACH;;AAEDC,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACV,QAAIC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB,EAAtB,CAAhB;AACA,QAAIC,OAAO,GAAG,KAAKP,SAAL,CAAeQ,IAAf,CAAoBC,UAAU,IAAIA,UAAU,KAAKL,SAAjD,CAAd;;AACA,YAAQG,OAAR;AACI,WAAK,EAAL;AACI,eAAO;AACHG,UAAAA,MAAM,EAAE,GADL;AAEHC,UAAAA,KAAK,EAAE,MAFJ;AAGHC,UAAAA,IAAI,EAAE;AAHH,SAAP;;AAKJ,WAAK,OAAL;AACI,eAAO;AACHF,UAAAA,MAAM,EAAE,GADL;AAEHC,UAAAA,KAAK,EAAE,OAFJ;AAGHC,UAAAA,IAAI,EAAE;AAHH,SAAP;;AAKJ,WAAK,SAAL;AACI,eAAO;AACHF,UAAAA,MAAM,EAAE,GADL;AAEHC,UAAAA,KAAK,EAAE,mBAFJ;AAGHC,UAAAA,IAAI,EAAE,iCAHH;AAIHC,UAAAA,OAAO,EAAE,CACL;AACIC,YAAAA,IAAI,EAAE,IADV;AAEIF,YAAAA,IAAI,EAAE;AAFV,WADK,EAKL;AACIE,YAAAA,IAAI,EAAE,IADV;AAEIF,YAAAA,IAAI,EAAE;AAFV,WALK,EASL;AACIE,YAAAA,IAAI,EAAE,IADV;AAEIF,YAAAA,IAAI,EAAE;AAFV,WATK;AAJN,SAAP;;AAoBJ;AACI,eAAO;AACHF,UAAAA,MAAM,EAAE,GADL;AAEHE,UAAAA,IAAI,EAAE;AAFH,SAAP;AAnCR;AAwCH;;AAEDG,EAAAA,OAAO,CAACZ,KAAD,EAAQS,IAAR,EAAc;AACjB,QAAI,CAACA,IAAL,EAAW,OAAO,kBAAP;AACX,QAAIR,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB,EAAtB,CAAhB;AACA,QAAIC,OAAO,GAAG,KAAKN,UAAL,CAAgBO,IAAhB,CAAqBC,UAAU,IAAIA,UAAU,KAAKL,SAAlD,CAAd;;AACA,YAAQG,OAAR;AACI,WAAK,QAAL;AACI,eAAO;AACHG,UAAAA,MAAM,EAAE,GADL;AAEHM,UAAAA,UAAU,EAAEJ;AAFT,SAAP;;AAIJ,WAAK,OAAL;AACI,eAAO;AACHF,UAAAA,MAAM,EAAE,GADL;AAEHO,UAAAA,SAAS,EAAEL;AAFR,SAAP;;AAIJ;AACI,eAAO;AACHF,UAAAA,MAAM,EAAE,GADL;AAEHE,UAAAA,IAAI,EAAE;AAFH,SAAP;AAZR;AAiBH;;AA7ES;;AAgFdM,MAAM,CAACC,OAAP,GAAiBtB,OAAjB","sourcesContent":["/**\n * A module for a fake api.\n */\n\"use strict\";\n\nclass FakeAPI {\n    /**\n     * @constructor\n     *\n     * @param {object} options - Configure by sending options.\n     */\n    constructor(options = {}) {\n        this.getRoutes  = options.getRoutes  || [\"\", \"reports\", \"about\"];\n        this.postRoutes = options.postRoutes || [\"report\", \"login\"];\n    }\n\n    getGet(route) {\n        let trimRoute = route.split(\"/\").join(\"\");\n        let isValid = this.getRoutes.find(validRoute => validRoute === trimRoute);\n        switch (isValid) {\n            case \"\":\n                return {\n                    status: 200,\n                    title: \"Home\",\n                    data: \"Welcome to fakeapi\"\n                }\n            case \"about\":\n                return {\n                    status: 200,\n                    title: \"About\",\n                    data: \"This is the about page for fake api\"\n                }\n            case \"reports\":\n                return {\n                    status: 200,\n                    title: \"Completed reports\",\n                    data: \"These are the completed reports\",\n                    reports: [\n                        {\n                            kmom: \"01\",\n                            data: \"Report for kmom01\"\n                        },\n                        {\n                            kmom: \"02\",\n                            data: \"Report for kmom02\"\n                        },\n                        {\n                            kmom: \"03\",\n                            data: \"Report for kmom03\"\n                        }\n                    ]\n                }\n        \n            default:\n                return {\n                    status: 404,\n                    data: \"Route does not exist\"\n                }\n        }\n    }\n\n    getPost(route, data) {\n        if (!data) return \"No data provided\";\n        let trimRoute = route.split(\"/\").join(\"\");\n        let isValid = this.postRoutes.find(validRoute => validRoute === trimRoute);\n        switch (isValid) {\n            case \"report\":\n                return {\n                    status: 201,\n                    reportInfo: data\n                }\n            case \"login\":\n                return {\n                    status: 201,\n                    loginInfo: data\n                }\n            default:\n                return {\n                    status: 404,\n                    data: \"Route does not exist\"\n                }\n        }\n    }\n}\n\nmodule.exports = FakeAPI;"]}