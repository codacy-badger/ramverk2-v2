{"version":3,"sources":["fakeapi.test.js"],"names":["FakeAPI","require","API","test","exp","res","getGet","expect","data","toBe","status","getPost","not","reportInfo"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,0BAAD,CAAvB;;AAEA,MAAMC,GAAG,GAAG,IAAIF,OAAJ,EAAZ;AAEAG,IAAI,CAAC,eAAD,EAAkB,MAAM;AACxB,QAAMC,GAAG,GAAG,oBAAZ;AACA,QAAMC,GAAG,GAAGH,GAAG,CAACI,MAAJ,CAAW,EAAX,CAAZ;AACAC,EAAAA,MAAM,CAACF,GAAG,CAACG,IAAL,CAAN,CAAiBC,IAAjB,CAAsBL,GAAtB;AACH,CAJG,CAAJ;AAMAD,IAAI,CAAC,iBAAD,EAAoB,MAAM;AAC1B,QAAMC,GAAG,GAAG,GAAZ;AACA,QAAMC,GAAG,GAAGH,GAAG,CAACI,MAAJ,CAAW,MAAX,CAAZ;AACAC,EAAAA,MAAM,CAACF,GAAG,CAACK,MAAL,CAAN,CAAmBD,IAAnB,CAAwBL,GAAxB;AACH,CAJG,CAAJ;AAMAD,IAAI,CAAC,kBAAD,EAAqB,MAAM;AAC3B,MAAIC,GAAG,GAAG,GAAV;AACA,QAAMC,GAAG,GAAGH,GAAG,CAACS,OAAJ,CAAY,QAAZ,CAAZ;AACAJ,EAAAA,MAAM,CAACF,GAAG,CAACK,MAAL,CAAN,CAAmBE,GAAnB,CAAuBH,IAAvB,CAA4B,GAA5B;AACAL,EAAAA,GAAG,GAAG,kBAAN;AACAG,EAAAA,MAAM,CAACF,GAAD,CAAN,CAAYI,IAAZ,CAAiBL,GAAjB;AACH,CANG,CAAJ;AAQAD,IAAI,CAAC,oBAAD,EAAuB,MAAM;AAC7B,MAAIC,GAAG,GAAG,kBAAV;AACA,QAAMC,GAAG,GAAGH,GAAG,CAACS,OAAJ,CAAY,QAAZ,EAAsB,kBAAtB,CAAZ;AACAJ,EAAAA,MAAM,CAACF,GAAG,CAACQ,UAAL,CAAN,CAAuBJ,IAAvB,CAA4BL,GAA5B;AACH,CAJG,CAAJ;AAMAD,IAAI,CAAC,+BAAD,EAAkC,MAAM;AACxC,MAAIC,GAAG,GAAG,GAAV;AACA,QAAMC,GAAG,GAAGH,GAAG,CAACS,OAAJ,CAAY,QAAZ,EAAsB,cAAtB,CAAZ;AACAJ,EAAAA,MAAM,CAACF,GAAG,CAACK,MAAL,CAAN,CAAmBD,IAAnB,CAAwBL,GAAxB;AACH,CAJG,CAAJ;AAMAD,IAAI,CAAC,+BAAD,EAAkC,MAAM;AACxC,MAAIC,GAAG,GAAG,GAAV;AACA,QAAMC,GAAG,GAAGH,GAAG,CAACS,OAAJ,CAAY,QAAZ,CAAZ;AACAJ,EAAAA,MAAM,CAACF,GAAG,CAACK,MAAL,CAAN,CAAmBE,GAAnB,CAAuBH,IAAvB,CAA4BL,GAA5B;AACH,CAJG,CAAJ","sourcesContent":["const FakeAPI = require(\"../../classes/FakeAPI.js\");\n\nconst API = new FakeAPI();\n\ntest(\"Get home data\", () => {\n    const exp = \"Welcome to fakeapi\";\n    const res = API.getGet(\"\");\n    expect(res.data).toBe(exp);\n});\n\ntest(\"Get route error\", () => {\n    const exp = 404;\n    const res = API.getGet(\"asdf\");\n    expect(res.status).toBe(exp);\n});\n\ntest(\"Post route error\", () => {\n    let exp = 404;\n    const res = API.getPost(\"report\");\n    expect(res.status).not.toBe(404);\n    exp = \"No data provided\";\n    expect(res).toBe(exp);\n});\n\ntest(\"Post submit report\", () => {\n    let exp = \"This is a report\";\n    const res = API.getPost(\"report\", \"This is a report\");\n    expect(res.reportInfo).toBe(exp);\n});\n\ntest(\"Post submit login information\", () => {\n    let exp = 201;\n    const res = API.getPost(\"report\", \"coolUsername\");\n    expect(res.status).toBe(exp);\n});\n\ntest(\"Post submit login information\", () => {\n    let exp = 201;\n    const res = API.getPost(\"report\");\n    expect(res.status).not.toBe(exp);\n});\n"]}